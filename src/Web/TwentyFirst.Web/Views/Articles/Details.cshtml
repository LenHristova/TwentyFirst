@model TwentyFirst.Common.Models.Articles.ArticleDetailsViewModel

@{
    ViewData["Title"] = Model.Title;
}

<!-- ********** Hero Area Start ********** -->
<div class="hero-area height-600 bg-img" style="background-image: url(@Model.ImageUrl);"></div>
<div class="container h-100">
    <div class="row h-100 align-items-center justify-content-center">
        <div class="col-12 col-md-12 col-lg-12">
            <div class="single-blog-title text-center">
                <h1 class="display-4">@Model.Title</h1>
            </div>
            <hr />
            <h5 class="text-center text-muted">@Model.Lead</h5>
        </div>
    </div>
</div>
<!-- ********** Hero Area End ********** -->

<div class="main-content-wrapper section-padding-100">
    <div class="container">
        <div class="row justify-content-center">
            <!-- ============= Post Content Area ============= -->
            <div class="col-12 col-lg-8">
                <div class="single-blog-content mb-100">
                    <!-- Post Meta -->
                    <p class="fa fa-clock-o text-muted"> @Model.PublishedOnString</p>
                    <!-- Post Content -->
                    <div class="post-content">
                        <h6>@Html.Raw(Model.HtmlContent)</h6>

                        @if (Model.Categories.Any())
                        {
                            <ul class="post-tags">
                                @foreach (var category in Model.Categories)
                                {
                                    <li>
                                        <a asp-area="" asp-controller="Articles" asp-action="Index" asp-route-categoryId="@category.Id">@category.Name</a>
                                    </li>
                                }
                            </ul>
                        }
                        <!-- Post Meta -->
                            <div class="post-meta second-part text-muted p-2">
                                <p class="post-author d-inline"> @Model.Author</p>
                                <p class="post-date d-inline fa fa-clock-o"> @Model.PublishedOnString</p>
                            </div>
                    </div>
                </div>
            </div>

            <!-- ========== Sidebar Area ========== -->
            <div class="col-12 col-md-8 col-lg-4">
                <!-- ============== Important articles by categories ============== -->
                @await Component.InvokeAsync("important-articles-by-categories",new { ids = Model.CategoriesIds, excludeArticleId = Model.Id })

                <!-- ============== Stay Connected ============== -->
                <partial name="_StayConnectedPartial" />
            </div>
        </div>

        <!-- ============== Related Post ============== -->
        <partial name="_ConnectedArticlesPartial" model="@Model.ConnectedArticles" />
    </div>
</div>